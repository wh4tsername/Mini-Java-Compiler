Program: 
	Main class: Factorial
		Main: 
			Method declaration: main, (return type): void, (arguments): 
			no arguments
				Statements: 
					Variable declaration: fac -> Fac
					Assignment: 
						Lvalue: 
							fac
						New var allocation: Fac
					Method invocation: Print
					(arguments): 
						Method invocation: ComputeFac
						(arguments): 
							Number: 10
						(called from): fac
					(called from): fac
	Statements: 
		Class: Fac
			Statements: 
				Method declaration: ComputeFac, (return type): int, (arguments): 
				num -> int
					Statements: 
						Assert: 
							Logical expression: (operation): >
								Variable: num
								Arithmetical expression: (operation): @
									Number: 1
						Variable declaration: num_aux -> int
						If statement: 
						Expression: 
							Logical expression: (operation): ==
								Variable: num
								Number: 0
						If: 
							[new scope]
							Statements: 
								Assignment: 
									Lvalue: 
										num_aux
									Number: 1
						Else: 
							[new scope]
							Statements: 
								Assignment: 
									Lvalue: 
										num_aux
									Arithmetical expression: (operation): *
										Variable: num
										Method invocation: ComputeFac
										(arguments): 
											Arithmetical expression: (operation): -
												Variable: num
												Number: 1
										(called from): this
						Return: 
							Variable: num_aux
				Method declaration: Print, (return type): void, (arguments): 
				arg -> int
					Statements: 
						Print: 
							Variable: arg
